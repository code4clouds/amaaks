{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "virtualNetworks_amaaks_name": {
      "defaultValue": "amaaks-vnet",
      "type": "String"
    },
    "clusterName": {
      "type": "string",
      "metadata": {
        "description": "The name of the Managed Cluster resource."
      },
      "defaultValue": "amaaks-cluster"
    },
    "location": {
      "type": "string",
      "metadata": {
        "description": "The location of AKS resource."
      },
      "defaultValue": "centralus"
    },
    "workspaceSku": {
      "type": "string",
      "metadata": {
        "description": "Names of the workspace."
      },
      "defaultValue": "pergb2018"
    },
    "dnsPrefix": {
      "type": "string",
      "metadata": {
        "description": "Optional DNS prefix to use with hosted Kubernetes API server FQDN."
      },
      "defaultValue": "[resourceGroup().name]"
    },
    "osDiskSizeGB": {
      "type": "int",
      "defaultValue": 0,
      "metadata": {
        "description": "Disk size (in GiB) to provision for each of the agent pool nodes. This value ranges from 0 to 1023. Specifying 0 will apply the default disk size for that agentVMSize."
      },
      "minValue": 0,
      "maxValue": 1023
    },
    "kubernetesVersion": {
      "type": "string",
      "defaultValue": "1.17.11",
      "metadata": {
        "description": "The version of Kubernetes."
      }
    },
    "networkPlugin": {
      "type": "string",
      "allowedValues": [
        "azure",
        "kubenet"
      ],
      "metadata": {
        "description": "Network plugin used for building Kubernetes network."
      },
      "defaultValue": "azure"
    },
    "enableRBAC": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Boolean flag to turn on and off of RBAC."
      }
    },
    "enablePrivateCluster": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Enable private network access to the Kubernetes cluster."
      }
    },
    "enableHttpApplicationRouting": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Boolean flag to turn on and off http application routing."
      }
    },
    "enableAzurePolicy": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Boolean flag to turn on and off Azure Policy addon."
      }
    },
    "enableOmsAgent": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Boolean flag to turn on and off omsagent addon."
      }
    },    
    "serviceCidr": {
      "type": "string",
      "metadata": {
        "description": "A CIDR notation IP range from which to assign service cluster IPs."
      },
      "defaultValue": "11.0.0.0/22"
    },
    "dnsServiceIP": {
      "type": "string",
      "metadata": {
        "description": "Containers DNS server IP address."
      },
      "defaultValue": "11.0.0.10"
    },
    "dockerBridgeCidr": {
      "type": "string",
      "metadata": {
        "description": "A CIDR notation IP for Docker bridge."
      },
      "defaultValue": "172.17.0.1/16"
    },
    "networkInterfaceName": {
      "type": "string",
      "defaultValue": "amaaks-nic"
    },
    "networkSecurityGroupName": {
      "type": "string",
      "defaultValue": "amaaks-nsg"
    },
    "networkSecurityGroupRules": {
      "type": "array",
      "defaultValue": [
        {
          "name": "SSH",
          "properties": {
            "priority": 300,
            "protocol": "TCP",
            "access": "Allow",
            "direction": "Inbound",
            "sourceAddressPrefix": "*",
            "sourcePortRange": "*",
            "destinationAddressPrefix": "*",
            "destinationPortRange": "22"
          }
        }
      ]
    },
    "subnetName": {
      "type": "string",
      "defaultValue": "default"
    },
    "publicIpAddressName": {
      "type": "string",
      "defaultValue": "amaaks-ip"
    },
    "publicIpAddressType": {
      "type": "string",
      "defaultValue": "Static"
    },
    "publicIpAddressSku": {
      "type": "string",
      "defaultValue": "Standard"
    },
    "virtualMachineName": {
      "type": "string",
      "defaultValue": "amaaks-vm"
    },
    "virtualMachineHostnameName": {
      "type": "string",
      "defaultValue": "amaaks"
    },
    "osDiskType": {
      "type": "string",
      "defaultValue": "Premium_LRS"
    },
    "virtualMachineSize": {
      "type": "string",
      "defaultValue": "Standard_DS2_v2"
    },
    "adminUsername": {
      "type": "string",
      "defaultValue": "amaaks"
    },
    "adminPassword": {
      "type": "secureString",
      "defaultValue": "amaAKS123!@#"
    },
    "zone": {
      "type": "string",
      "defaultValue": "1"
    }
  },
  "variables": {
    "nsgId": "[resourceId(resourceGroup().name, 'Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroupName'))]",
    "vnetId": "[resourceId(resourceGroup().name, 'Microsoft.Network/virtualNetworks', parameters('virtualNetworks_amaaks_name') )]",
    "subnetRef": "[concat(variables('vnetId'), '/subnets/', parameters('subnetName'))]",
    "workspaceName": "[concat(resourceGroup().name, '-workspace')]",
    "vm-script": "IyEvYmluL2Jhc2gKIyBzZXQgLXgKIyBSZXF1aXJlcyBVYnVudHUgaG9zdCAxOC4wNCBEUzJfVjIgdXNpbmcgaG9zdG5hbWUgYW5kIHVzZXIgYW1hYWtzCiMgVGhpcyBzY3JpcHQgbmVlZHMgdG8gYmUgY29udmVydGVkIHRvIGI2NCBpZiB1c2VkIG9uIGEgY2xlYW4gdWJ1bnR1IGluc3RhbGwgYW5kIG5vdCBhICdjb29rZWQnIGltYWdlLiAgVGhlIHJlc3VsdGluZyBzY3JpcHQgaXMgaW4gdGhlIG1haW5UZW1wbGF0ZS5qc29uLgojIGJhc2U2NCAtdyAwIHZtb2ZmZXItZnVsbHNjcmlwdC5zaCA+IHZtb2ZmZXItZnVsbHNjcmlwdC5zaC5iNjQKCgojIElmIHRoZSBVYnVudHUgaW1hZ2UgaXMgY2xlYW4gdGhlbiBpbnN0YWxsIHRoZSB0b29scwppZiAhIHBncmVwIC14ICJkb2NrZXJkIiA+L2Rldi9udWxsCnRoZW4KICAgIGVjaG8gIkNvbmZpZ3VyaW5nIHRoaXMgY2xlbmEgaW1hZ2UuLi4iIAogICAgCiMgSW5zdGFsbCBEb2NrZXIgaHR0cHM6Ly9kb2NzLmRvY2tlci5jb20vZW5naW5lL2luc3RhbGwvdWJ1bnR1LwoKc3VkbyBhcHQtZ2V0IHVwZGF0ZXMKc3VkbyBhcHQtZ2V0IHVwZ3JhZGUgLXkKc3VkbyBhcHQtZ2V0IGluc3RhbGwgLXkgXAogICAgYXB0LXRyYW5zcG9ydC1odHRwcyBcCiAgICBjYS1jZXJ0aWZpY2F0ZXMgXAogICAgY3VybCBcCiAgICBnbnVwZy1hZ2VudCBcCiAgICBzb2Z0d2FyZS1wcm9wZXJ0aWVzLWNvbW1vbgpjdXJsIC1mc1NMIGh0dHBzOi8vZG93bmxvYWQuZG9ja2VyLmNvbS9saW51eC91YnVudHUvZ3BnIHwgc3VkbyBhcHQta2V5IGFkZCAtCnN1ZG8gYXB0LWtleSBmaW5nZXJwcmludCAwRUJGQ0Q4OApzdWRvIGFkZC1hcHQtcmVwb3NpdG9yeSBcCiAgImRlYiBbYXJjaD1hbWQ2NF0gaHR0cHM6Ly9kb3dubG9hZC5kb2NrZXIuY29tL2xpbnV4L3VidW50dSBcCiAgJChsc2JfcmVsZWFzZSAtY3MpIFwKICBzdGFibGUiCnN1ZG8gYXB0LWdldCB1cGRhdGUKc3VkbyBhcHQtZ2V0IGluc3RhbGwgLXkgZG9ja2VyLWNlIGRvY2tlci1jZS1jbGkgY29udGFpbmVyZC5pbwpzdWRvIHVzZXJtb2QgLWFHIGRvY2tlciBhbWFha3MKCiMgSW5zdGFsbCBEb2NrZXItQ29tcG9zZQpzdWRvIGN1cmwgLUwgImh0dHBzOi8vZ2l0aHViLmNvbS9kb2NrZXIvY29tcG9zZS9yZWxlYXNlcy9kb3dubG9hZC8xLjI3LjQvZG9ja2VyLWNvbXBvc2UtJCh1bmFtZSAtcyktJCh1bmFtZSAtbSkiIC1vIC91c3IvbG9jYWwvYmluL2RvY2tlci1jb21wb3NlCnN1ZG8gY2htb2QgK3ggL3Vzci9sb2NhbC9iaW4vZG9ja2VyLWNvbXBvc2UKc3VkbyBsbiAtcyAvdXNyL2xvY2FsL2Jpbi9kb2NrZXItY29tcG9zZSAvdXNyL2Jpbi9kb2NrZXItY29tcG9zZQoKIyBJbnN0YWxsIEhBUkRCT1IgaHR0cHM6Ly9nb2hhcmJvci5pby9kb2NzLzIuMC4wL2luc3RhbGwtY29uZmlnL2NvbmZpZ3VyZS1odHRwcy8Kd2dldCBodHRwczovL2dpdGh1Yi5jb20vZ29oYXJib3IvaGFyYm9yL3JlbGVhc2VzL2Rvd25sb2FkL3YyLjEuMC9oYXJib3Itb2ZmbGluZS1pbnN0YWxsZXItdjIuMS4wLnRnegp0YXIgLXh2ZiBoYXJib3Itb2ZmbGluZS1pbnN0YWxsZXItdjIuMS4wLnRnegpjZCBoYXJib3IKCm9wZW5zc2wgcmFuZCAtb3V0IH4vLnJuZCAtd3JpdGVyYW5kIH4vLnJuZApvcGVuc3NsIGdlbnJzYSAtb3V0IGNhLmtleSA0MDk2Cm9wZW5zc2wgcmVxIC14NTA5IC1uZXcgLW5vZGVzIC1zaGE1MTIgLWRheXMgMzY1MCAtc3ViaiAiL0M9VVMvU1Q9TUEvQ049YW1hYWtzIiAta2V5IGNhLmtleSAtb3V0IGNhLmNydApvcGVuc3NsIGdlbnJzYSAtb3V0IGFtYWFrcy5rZXkgNDA5NgpvcGVuc3NsIHJlcSAtc2hhNTEyIC1uZXcgIC1zdWJqICIvQz1VUy9TVD1NQS9DTj1hbWFha3MiIC1rZXkgYW1hYWtzLmtleSAtb3V0IGFtYWFrcy5jc3IKCmNhdCA+IHYzLmV4dCA8PC1FT0YKYXV0aG9yaXR5S2V5SWRlbnRpZmllcj1rZXlpZCxpc3N1ZXIKYmFzaWNDb25zdHJhaW50cz1DQTpGQUxTRQprZXlVc2FnZSA9IGRpZ2l0YWxTaWduYXR1cmUsIG5vblJlcHVkaWF0aW9uLCBrZXlFbmNpcGhlcm1lbnQsIGRhdGFFbmNpcGhlcm1lbnQKZXh0ZW5kZWRLZXlVc2FnZSA9IHNlcnZlckF1dGgKc3ViamVjdEFsdE5hbWUgPSBAYWx0X25hbWVzCgpbYWx0X25hbWVzXQpETlMuMT1hbWFha3MKRU9GCgoKb3BlbnNzbCB4NTA5IC1yZXEgLXNoYTUxMiAtZGF5cyAzNjUwIFwKICAgIC1leHRmaWxlIHYzLmV4dCBcCiAgICAtQ0EgY2EuY3J0IC1DQWtleSBjYS5rZXkgLUNBY3JlYXRlc2VyaWFsIFwKICAgIC1pbiBhbWFha3MuY3NyIFwKICAgIC1vdXQgYW1hYWtzLmNydAoKc3VkbyBta2RpciAtcCAvZGF0YS9jZXJ0LwpzdWRvIGNwIGFtYWFrcy5jcnQgL2RhdGEvY2VydC8Kc3VkbyBjcCBhbWFha3Mua2V5IC9kYXRhL2NlcnQvCgpvcGVuc3NsIHg1MDkgLWluZm9ybSBQRU0gLWluIGFtYWFrcy5jcnQgLW91dCBhbWFha3MuY2VydApzdWRvIG1rZGlyIC1wIC9ldGMvZG9ja2VyL2NlcnRzLmQvYW1hYWtzOjQ0MwpzdWRvIGNwIGFtYWFrcy5jZXJ0IC9ldGMvZG9ja2VyL2NlcnRzLmQvYW1hYWtzOjQ0My8Kc3VkbyBjcCBhbWFha3Mua2V5IC9ldGMvZG9ja2VyL2NlcnRzLmQvYW1hYWtzOjQ0My8Kc3VkbyBjcCBjYS5jcnQgL2V0Yy9kb2NrZXIvY2VydHMuZC9hbWFha3M6NDQzCmNhdCBjYS5jcnQgPj4gcmVnaXN0cnkucGVtCmNhdCBhbWFha3MuY2VydCA+PiByZWdpc3RyeS5wZW0KY2F0IGFtYWFrcy5rZXkgPj4gcmVnaXN0cnkucGVtCgojIFVwZGF0ZSBkb2NrZXIgdG8gcmVjb2duaXplIHRoZSBob3N0CnN1ZG8gY2F0ID4gZGFlbW9uLmpzb24gPDwtRU9GCnsKICAgICJpbnNlY3VyZS1yZWdpc3RyaWVzIiA6IFsgImFtYWFrcyIgXQp9CkVPRgpzdWRvIG12IGRhZW1vbi5qc29uIC9ldGMvZG9ja2VyL2RhZW1vbi5qc29uCgpzdWRvIHN5c3RlbWN0bCByZXN0YXJ0IGRvY2tlcgoKIyMgQ29uZmlndXJlIEhhcmJlciBob3N0bmFtZSBhbmQgY2VydC1rZXkgbG9jYXRpb24KIyBjcCBoYXJib3IueW1sLnRtcGwgaGFyYm9yLnltbAp3Z2V0IGh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9jb2RlNGNsb3Vkcy9hbWFha3MvbWFpbi9oYXJib3IueW1sCiMgIGNlcnRpZmljYXRlOiAvZXRjL2RvY2tlci9jZXJ0cy5kL2FtYWFrczo0NDMvYW1hYWtzLmNlcnQKIyAgcHJpdmF0ZV9rZXk6IC9ldGMvZG9ja2VyL2NlcnRzLmQvYW1hYWtzOjQ0My9hbWFha3Mua2V5CnN1ZG8gLi9wcmVwYXJlCiNzdWRvIGRvY2tlci1jb21wb3NlIGRvd24gLXYKc3VkbyBkb2NrZXItY29tcG9zZSB1cCAtZAooY3JvbnRhYiAtbCA7IGVjaG8gIkByZWJvb3Qgc2xlZXAgNjAgJiYgY2QgL2hvbWUvYW1hYWtzL2hhcmJvciAmJiBkb2NrZXItY29tcG9zZSB1cCAtZCIpfCBjcm9udGFiIC0KCiMgQ29uZmlndXJlIEhhcmJvcgoKIyBDcmVhdGUgUHJvamVjdAplY2hvICJTZWVkaW5nIEhhcmJvci4uLiIKc2xlZXAgMzAgIyB3YXJtdXAgdGltZSBmb3IgdGhlIEhhcmJvciBSZWdpc3RyeQoKY3VybCAtdSAiYWRtaW46SGFyYm9yMTIzNDUiIFwKICAtSCAiQ29udGVudC1UeXBlOiBhcHBsaWNhdGlvbi9qc29uIiBcCiAgLWtpIGh0dHBzOi8vYW1hYWtzL2FwaS92Mi4wL3Byb2plY3RzIFwKICAtLWRhdGEtYmluYXJ5ICd7InByb2plY3RfbmFtZSI6ImNvZGU0Y2xvdWRzIiwicmVnaXN0cnlfaWQiOm51bGwsIm1ldGFkYXRhIjp7InB1YmxpYyI6InRydWUifSwic3RvcmFnZV9saW1pdCI6LTF9JyBcCiAgLS1jb21wcmVzc2VkIFwKICAtLWluc2VjdXJlCgojIENyZWF0ZSBSZWdpc3RyeSBFbmRwb2ludApjdXJsIC11ICJhZG1pbjpIYXJib3IxMjM0NSIgXAogIC1IICJDb250ZW50LVR5cGU6IGFwcGxpY2F0aW9uL2pzb24iIFwKICAta2kgaHR0cHM6Ly9hbWFha3MvYXBpL3YyLjAvcmVnaXN0cmllcyBcCiAgLS1kYXRhLWJpbmFyeSAneyJjcmVkZW50aWFsIjp7ImFjY2Vzc19rZXkiOiIiLCJhY2Nlc3Nfc2VjcmV0IjoiIiwidHlwZSI6ImJhc2ljIn0sImRlc2NyaXB0aW9uIjoiIiwiaW5zZWN1cmUiOmZhbHNlLCJuYW1lIjoiY29kZTRjbG91ZHMiLCJ0eXBlIjoiZG9ja2VyLWh1YiIsInVybCI6Imh0dHBzOi8vaHViLmRvY2tlci5jb20ifScgXAogIC0tY29tcHJlc3NlZCBcCiAgLS1pbnNlY3VyZQoKIyBDcmVhdGUgUmVwbGljYQpjdXJsIC11ICJhZG1pbjpIYXJib3IxMjM0NSIgXAogIC1IICJDb250ZW50LVR5cGU6IGFwcGxpY2F0aW9uL2pzb24iIFwKICAta2kgaHR0cHM6Ly9hbWFha3MvYXBpL3YyLjAvcmVwbGljYXRpb24vcG9saWNpZXMgXAogIC0tZGF0YS1iaW5hcnkgJ3sibmFtZSI6ImNvZGU0Y2xvdWRzIiwiZGVzY3JpcHRpb24iOiIiLCJzcmNfcmVnaXN0cnkiOnsiaWQiOjEsIm5hbWUiOiJjb2RlNGNsb3VkcyIsImRlc2NyaXB0aW9uIjoiIiwidHlwZSI6ImRvY2tlci1odWIiLCJ1cmwiOiJodHRwczovL2h1Yi5kb2NrZXIuY29tIiwidG9rZW5fc2VydmljZV91cmwiOiIiLCJjcmVkZW50aWFsIjp7InR5cGUiOiIiLCJhY2Nlc3Nfa2V5IjoiIiwiYWNjZXNzX3NlY3JldCI6IiJ9LCJpbnNlY3VyZSI6ZmFsc2UsInN0YXR1cyI6ImhlYWx0aHkiLCJjcmVhdGlvbl90aW1lIjoiMjAyMC0xMC0yMVQwNTo0ODo0OS4zMDU3NjJaIiwidXBkYXRlX3RpbWUiOiIyMDIwLTEwLTIxVDA2OjAxOjU3LjMzNDAwM1oifSwiZGVzdF9yZWdpc3RyeSI6bnVsbCwiZGVzdF9uYW1lc3BhY2UiOm51bGwsInRyaWdnZXIiOnsidHlwZSI6Im1hbnVhbCIsInRyaWdnZXJfc2V0dGluZ3MiOnsiY3JvbiI6IiJ9fSwiZW5hYmxlZCI6dHJ1ZSwiZGVsZXRpb24iOmZhbHNlLCJvdmVycmlkZSI6ZmFsc2UsImZpbHRlcnMiOlt7InR5cGUiOiJuYW1lIiwidmFsdWUiOiJjb2RlNGNsb3Vkcy8qKiJ9XX0nIFwKICAtLWNvbXByZXNzZWQgXAogIC0taW5zZWN1cmUKCiMgRXhlY3V0ZSBSZXBsaWNhIApjdXJsIC11ICJhZG1pbjpIYXJib3IxMjM0NSIgXAogIC1IICJDb250ZW50LVR5cGU6IGFwcGxpY2F0aW9uL2pzb24iIFwKICAta2kgaHR0cHM6Ly9hbWFha3MvYXBpL3YyLjAvcmVwbGljYXRpb24vZXhlY3V0aW9ucyBcCiAgLS1kYXRhLWJpbmFyeSAneyJwb2xpY3lfaWQiOjF9JyBcCiAgLS1jb21wcmVzc2VkIFwKICAtLWluc2VjdXJlCgpzbGVlcCAzMCAjIHdhaXQgdGltZSB0byBsZXQgaGFyYm9yIGNvcHkgdGhlIGltYWdlcwplY2hvICJTZWVkaW5nIEhhcmJvciBDb21wbGV0ZWQuLi4iCmNkIC4uCgojIEluc3RhbGwgS3ViZUN0bApzdWRvIGFwdC1nZXQgdXBkYXRlICYmIHN1ZG8gYXB0LWdldCBpbnN0YWxsIC15IGFwdC10cmFuc3BvcnQtaHR0cHMgZ251cGcyIGN1cmwKY3VybCAtcyBodHRwczovL3BhY2thZ2VzLmNsb3VkLmdvb2dsZS5jb20vYXB0L2RvYy9hcHQta2V5LmdwZyB8IHN1ZG8gYXB0LWtleSBhZGQgLQplY2hvICJkZWIgaHR0cHM6Ly9hcHQua3ViZXJuZXRlcy5pby8ga3ViZXJuZXRlcy14ZW5pYWwgbWFpbiIgfCBzdWRvIHRlZSAtYSAvZXRjL2FwdC9zb3VyY2VzLmxpc3QuZC9rdWJlcm5ldGVzLmxpc3QKc3VkbyBhcHQtZ2V0IHVwZGF0ZQpzdWRvIGFwdC1nZXQgaW5zdGFsbCAteSBrdWJlY3RsCgojIEluc3RhbGwgQXoKY3VybCAtc0wgaHR0cHM6Ly9ha2EubXMvSW5zdGFsbEF6dXJlQ0xJRGViIHwgc3VkbyBiYXNoCgojIENvcHkgdGhlIGRlcGxveW1lbnQgZmlsZXMgZm9yIHRoZSBBS1MgY29uZmlndXJhdGlvbgp3Z2V0IGh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9jb2RlNGNsb3Vkcy9hbWFha3MvbWFpbi9ha3MtaGFyYm9yLWNhLWRhZW1vbnNldC55YW1sIAp3Z2V0IGh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9jb2RlNGNsb3Vkcy9hbWFha3MvbWFpbi9rYW5hcnktZGVwbG95bWVudC55YW1sIAp3Z2V0IGh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9jb2RlNGNsb3Vkcy9hbWFha3MvbWFpbi9rYW5hcnktc2VydmljZS55YW1sIAoKZWNobyAiQ29uZmlndXJlZCB0aGUgY2xlYW5lZCBpbWFnZS4iCmZpICMgRW5kIGltYWdlIGNoZWNrCgojIFNhdmUgdGhlIGt1YmVjb25maWcgbG9jYWxseQppZiBbICIkIyIgLW5lIDAgXQogIHRoZW4gCiAgICBlY2hvICJDb252ZXJ0aW5nIGt1YmVjb25maWcuLi4iCiAgICBlY2hvICQxCiAgICBlY2hvICQxID4ga3ViZS5jb25maWcuYjY0CiAgICBjYXQga3ViZS5jb25maWcuYjY0IHwgYmFzZTY0IC0tZGVjb2RlID4ga3ViZS5jb25maWcKICAgIGNhdCBrdWJlLmNvbmZpZwogICAgZWNobyAiQ29udmVydGVkIGt1YmVjb25maWcuIgogIGVsc2UgCiAgICBlY2hvICJHZXR0aW5nIGt1YmVjb25maWcgdXNpbmcgYXogZ2V0LWNyZWFkZW50aWFscy4uLiIKICAgIGF6IGFrcyBnZXQtY3JlZGVudGlhbHMgLS1yZXNvdXJjZS1ncm91cCBhbWFha3N2MiAtLW5hbWUgYW1hYWtzIC0tYWRtaW4KICAgIGVjaG8gIkNvbXBsZXRlZCBrdWJlY29uZmlnIgpmaQoKY2F0IDw8RU9GIHwga3ViZWN0bCBhcHBseSAtLWt1YmVjb25maWc9a3ViZS5jb25maWcgLWYgLQphcGlWZXJzaW9uOiB2MQpraW5kOiBTZWNyZXQKbWV0YWRhdGE6CiAgbmFtZTogcmVnaXN0cnktY2EKICBuYW1lc3BhY2U6IGt1YmUtc3lzdGVtCnR5cGU6IE9wYXF1ZQpkYXRhOgogIHJlZ2lzdHJ5LWNhOiAkKGNhdCAuL2hhcmJvci9jYS5jcnQgfCBiYXNlNjQgLXcgMCB8IHRyIC1kICdcbicpCkVPRgoKa3ViZWN0bCBhcHBseSAtZiBha3MtaGFyYm9yLWNhLWRhZW1vbnNldC55YW1sICAtLWt1YmVjb25maWc9a3ViZS5jb25maWcgCmt1YmVjdGwgY3JlYXRlIHNlY3JldCBkb2NrZXItcmVnaXN0cnkgYW1hYWtzcmVnY3JlZCAtLWRvY2tlci1zZXJ2ZXI9YW1hYWtzIC0tZG9ja2VyLXVzZXJuYW1lPWFkbWluIC0tZG9ja2VyLXBhc3N3b3JkPUhhcmJvcjEyMzQ1IC0tZG9ja2VyLWVtYWlsPXNvbWVndXlAY29kZTRjbG91ZHMuY29tIC0ta3ViZWNvbmZpZz1rdWJlLmNvbmZpZwoKIyBEZXBsb3kgY29udGFpbmVycwprdWJlY3RsIGFwcGx5IC1mIGthbmFyeS1kZXBsb3ltZW50LnlhbWwgLS1rdWJlY29uZmlnPWt1YmUuY29uZmlnCmt1YmVjdGwgYXBwbHkgLWYga2FuYXJ5LXNlcnZpY2UueWFtbCAtLWt1YmVjb25maWc9a3ViZS5jb25maWcKCgpleGl0OwoKIyBUZXN0aW5nIHRoZSByZWdpc3RyeSBieSB1cGxvYWQgYSBjb250YWluZXIgdG8gYW1hYWtzCiNzdWRvIGRvY2tlciBsb2dpbiBhbWFha3M6NDQzIC11IGFkbWluCiNzdWRvIGRvY2tlciB0YWcgY29kZTRjbG91ZHMvY2FuYXJ5a29udGFpbmVyOjEuMSBhbWFha3M6NDQzL2xpYnJhcnkvY2FuYXJ5a29udGFpbmVyOjEuMQojc3VkbyBkb2NrZXIgcHVzaCBhbWFha3M6NDQzL2xpYnJhcnkvY2FuYXJ5a29udGFpbmVyOjEuMQojU2V0dXAgcmVwbGljYXRpb24gZm9yIGRvY2tlcmh1YiAoY2hlY2sgdGhlIHBpY3R1cmVzIG9uIGhvdyB0byBkbyB0aGlzKQojc3VkbyBkb2NrZXIgcHVsbCBhbWFha3M6NDQzL2NvZGU0Y2xvdWRzL2NhbmFyeWtvbnRhaW5lcjoxLjIK"  
  },
  "resources": [
    {
      "apiVersion": "2020-08-01",
      "name": "[variables('workspaceName')]",
      "location": "[parameters('location')]",
      "type": "Microsoft.OperationalInsights/workspaces",
      "properties": {
        "sku": {
          "name": "[parameters('workspaceSku')]"
        }
      }
    },
    {
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2020-05-01",
      "name": "[parameters('virtualNetworks_amaaks_name')]",
      "location": "[parameters('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "10.0.0.0/16"
          ]
        },
        "subnets": [
          {
            "name": "default",
            "properties": {
              "addressPrefix": "10.0.0.0/22",
              "delegations": [],
              "privateEndpointNetworkPolicies": "Enabled",
              "privateLinkServiceNetworkPolicies": "Enabled"
            }
          }
        ],
        "virtualNetworkPeerings": [],
        "enableDdosProtection": false,
        "enableVmProtection": false
      }
    },
    {
      "type": "Microsoft.Network/virtualNetworks/subnets",
      "apiVersion": "2020-05-01",
      "name": "[concat(parameters('virtualNetworks_amaaks_name'), '/default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_amaaks_name'))]"
      ],
      "properties": {
        "addressPrefix": "10.0.0.0/22",
        "delegations": [],
        "privateEndpointNetworkPolicies": "Enabled",
        "privateLinkServiceNetworkPolicies": "Enabled"
      }
    },
    {
      "name": "[parameters('networkInterfaceName')]",
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2018-10-01",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/networkSecurityGroups/', parameters('networkSecurityGroupName'))]",
        "[concat('Microsoft.Network/publicIpAddresses/', parameters('publicIpAddressName'))]",
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_amaaks_name'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "subnet": {
                "id": "[variables('subnetRef')]"
              },
              "privateIPAllocationMethod": "Dynamic",
              "publicIpAddress": {
                "id": "[resourceId(resourceGroup().name, 'Microsoft.Network/publicIpAddresses', parameters('publicIpAddressName'))]"
              }
            }
          }
        ],
        "networkSecurityGroup": {
          "id": "[variables('nsgId')]"
        }
      }
    },
    {
      "name": "[parameters('networkSecurityGroupName')]",
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2019-02-01",
      "location": "[parameters('location')]",
      "properties": {
        "securityRules": "[parameters('networkSecurityGroupRules')]"
      }
    },
    {
      "name": "[parameters('publicIpAddressName')]",
      "type": "Microsoft.Network/publicIpAddresses",
      "apiVersion": "2019-02-01",
      "location": "[parameters('location')]",
      "properties": {
        "publicIpAllocationMethod": "[parameters('publicIpAddressType')]"
      },
      "sku": {
        "name": "[parameters('publicIpAddressSku')]"
      },
      "zones": [
        "[parameters('zone')]"
      ]
    },

    {

      "name": "[parameters('virtualMachineName')]",
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2019-07-01",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/', parameters('networkInterfaceName'))]",
        "[resourceId('Microsoft.ContainerService/managedClusters/', parameters('clusterName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('virtualMachineSize')]"
        },
        "storageProfile": {
          "osDisk": {
            "createOption": "fromImage",
            "managedDisk": {
              "storageAccountType": "[parameters('osDiskType')]"
            }
          },
          "imageReference": {
            "publisher": "Canonical",
            "offer": "UbuntuServer",
            "sku": "18.04-LTS",
            "version": "latest"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaceName'))]"
            }
          ]
        },
        "osProfile": {
          "computerName": "[parameters('virtualMachineHostnameName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": false
          }
        }
      },
      "zones": [
        "[parameters('zone')]"
      ]
    },
    {
      "name": "[concat(parameters('virtualMachineName'),'/CustomScriptExtension')]",
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "apiVersion": "2019-07-01",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Compute/virtualMachines/',parameters('virtualMachineName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "CustomScript",
        "typeHandlerVersion": "2.1",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "commandToExecute": "",
          "script": "",
          "fileUris": []
        },
        "protectedSettings": {
          "commandToExecute": "[concat('echo -n ',  variables('vm-script'),' | base64 --decode > /tmp/vmoffer-setup.sh && chmod +x /tmp/vmoffer-setup.sh && /tmp/vmoffer-setup.sh ', listClusterAdminCredential(parameters('clusterName'), '2020-03-01').kubeconfigs[0].value )]"
        }
      }
    },
    {
      "apiVersion": "2020-03-01",
      "type": "Microsoft.ContainerService/managedClusters",
      "name": "[parameters('clusterName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_amaaks_name'))]"
      ],
      "properties": {
        "kubernetesVersion": "[parameters('kubernetesVersion')]",
        "enableRBAC": "[parameters('enableRBAC')]",
        "dnsPrefix": "[parameters('dnsPrefix')]",
        "agentPoolProfiles": [
          {
            "name": "agentpool",
            "osDiskSizeGB": "[parameters('osDiskSizeGB')]",
            "count": 3,
            "vmSize": "Standard_DS2_v2",
            "osType": "Linux",
            "storageProfile": "ManagedDisks",
            "type": "VirtualMachineScaleSets",
            "mode": "System",
            "maxPods": 110,
            "availabilityZones": [
              "1",
              "2",
              "3"
            ],
            "vnetSubnetID": "[variables('subnetRef')]"
          }
        ],
        "networkProfile": {
          "loadBalancerSku": "standard",
          "networkPlugin": "[parameters('networkPlugin')]",
          "serviceCidr": "[parameters('serviceCidr')]",
          "dnsServiceIP": "[parameters('dnsServiceIP')]",
          "dockerBridgeCidr": "[parameters('dockerBridgeCidr')]"
        },
        "apiServerAccessProfile": {
          "enablePrivateCluster": "[parameters('enablePrivateCluster')]"
        },
        "addonProfiles": {
          "httpApplicationRouting": {
            "enabled": "[parameters('enableHttpApplicationRouting')]"
          },
          "azurePolicy": {
            "enabled": "[parameters('enableAzurePolicy')]"
          },
          "omsagent": {
            "enabled": "[parameters('enableOmsAgent')]",
            "config": {
              "logAnalyticsWorkspaceResourceID": "[resourceId(resourceGroup().name, 'Microsoft.OperationalInsights/workspaces', variables('workspaceName'))]"
            }
          }
        }
      },
      "tags": {},
      "identity": {
        "type": "SystemAssigned"
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "name": "SolutionDeployment",
      "apiVersion": "2017-05-10",
      "resourceGroup": "[split(resourceId(resourceGroup().name, 'Microsoft.OperationalInsights/workspaces', variables('workspaceName')),'/')[4]]",
      "subscriptionId": "[split(resourceId(resourceGroup().name, 'Microsoft.OperationalInsights/workspaces', variables('workspaceName')),'/')[2]]",
      "properties": {
        "mode": "Incremental",
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "apiVersion": "2015-11-01-preview",
              "type": "Microsoft.OperationsManagement/solutions",
              "location": "[parameters('location')]",
              "name": "[concat('ContainerInsights', '(', split(resourceId(resourceGroup().name, 'Microsoft.OperationalInsights/workspaces', variables('workspaceName')),'/')[8], ')')]",
              "properties": {
                "workspaceResourceId": "[resourceId(resourceGroup().name, 'Microsoft.OperationalInsights/workspaces', variables('workspaceName'))]"
              },
              "plan": {
                "name": "[concat('ContainerInsights', '(', split(resourceId(resourceGroup().name, 'Microsoft.OperationalInsights/workspaces', variables('workspaceName')),'/')[8], ')')]",
                "product": "[concat('OMSGallery/', 'ContainerInsights')]",
                "promotionCode": "",
                "publisher": "Microsoft"
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.OperationalInsights/workspaces/',variables('workspaceName'))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "name": "ClusterSubnetRoleAssignmentDeployment",
      "apiVersion": "2017-05-10",
      "resourceGroup": "[resourceGroup().name]",
      "subscriptionId": "[subscription().subscriptionId]",
      "properties": {
        "mode": "Incremental",
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.Network/virtualNetworks/subnets/providers/roleAssignments",
              "apiVersion": "2017-05-01",
              "name": "[concat(parameters('virtualNetworks_amaaks_name'), '/', parameters('subnetName'), '/Microsoft.Authorization/', guid(resourceGroup().id, deployment().name))]",
              "properties": {
                "roleDefinitionId": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', '4d97b98b-1d4f-4787-a291-c67834d212e7')]",
                "principalId": "[reference(parameters('clusterName')).identityProfile.kubeletidentity.objectId]",
                "scope": "[variables('subnetRef')]"
              }
            }
          ]
        }
      },
      "dependsOn": [
      ]
    }
  ],
  "outputs": {
    "k8config": {
      "type": "object",
      "value": "[listClusterAdminCredential(parameters('clusterName'), '2020-03-01')]"
    }
  }
}